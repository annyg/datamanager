% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_email_syntax.R
\name{check_email_syntax}
\alias{check_email_syntax}
\title{Check and Correct Common Email Syntax and Domain Typos}
\usage{
check_email_syntax(
  email_vec,
  return = c("flag", "reason", "corrected", "log"),
  remove_spaces = TRUE,
  lowercase = TRUE,
  fix_spelling = TRUE
)
}
\arguments{
\item{email_vec}{A character vector of email addresses to check.}

\item{return}{Character string indicating what to return. Must be one of:
\itemize{
\item \code{"flag"} — Logical vector indicating whether the email
fails basic pre-correction checks.
\item \code{"reason"} — Character vector describing the reason(s)
for the failure (e.g., whitespace, double '@', domain typos, invalid format).
\item \code{"corrected"} — Corrected email addresses if auto-corrections
were applied, otherwise \code{NA}.
\item \code{"log"} — Character vector logging the specific corrections applied.
}
Defaults to \code{"flag"}.}

\item{remove_spaces}{Logical, whether to remove spaces before correction.
Defaults to \code{TRUE}.}

\item{lowercase}{Logical, whether to convert email addresses to lowercase
before correction. Defaults to \code{TRUE}.}

\item{fix_spelling}{Logical, whether to attempt spelling corrections
for known domain and TLD typos. Defaults to \code{TRUE}.}
}
\value{
Depending on the value of \code{return}:
\itemize{
\item \code{"flag"} — Logical vector.
\item \code{"reason"} — Character vector.
\item \code{"corrected"} — Character vector (with \code{NA} where no correction applied).
\item \code{"log"} — Character vector (with \code{NA} where no correction applied).
}
}
\description{
This function detects and optionally corrects common email syntax issues
and misspellings in popular domains (e.g., Gmail, Yahoo, Hotmail, Outlook),
as well as certain top-level domain (TLD) errors. It can return flags,
reasons for invalidity, corrected email addresses, or a log of corrections.
}
\details{
The function performs the following steps:
\enumerate{
\item \strong{Pre-correction checks}: Flags whitespace, multiple '@' signs,
known domain typos for Gmail/Hotmail/Yahoo/Outlook, and invalid formats
based on a simplified regex pattern.
\item \strong{Corrections}: Applies sequential regex replacements to
remove invalid characters, fix domain spelling mistakes, and correct
common TLD errors (e.g., ".vom" → ".com").
\item \strong{Post-correction cleanup}: Collapses double dots, and
trims leading or trailing dots from the email.
}

Domain corrections are anchored to the domain portion of the email
(using lookbehinds/lookaheads) to avoid false positives.
}
\examples{
emails <- c("john.doe@gamil.com", " jane_doe @hotmail,com ", "valid@example.org")

# Flag invalid emails
check_email_syntax(emails, return = "flag")

# Get reasons for invalidity
check_email_syntax(emails, return = "reason")

# Get corrected addresses
check_email_syntax(emails, return = "corrected")

# Get a log of applied corrections
check_email_syntax(emails, return = "log")

}
